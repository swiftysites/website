{"metadata":{"modules":[{"name":"GFMarkdown"}],"role":"article","roleHeading":"Article","title":"Building and distributing"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Compiling-cmark-gfm-for-macOS","text":"Compiling cmark-gfm for macOS"},{"inlineContent":[{"type":"text","text":"On a Mac, download the source code for "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/github\/cmark-gfm"},{"type":"text","text":" and build using "},{"type":"codeVoice","code":"CMake"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"sh","code":["git checkout https:\/\/github.com\/github\/cmark-gfm","cd cmark-gfm","mkdir build-macos build-macos-x86_64 build-macos-arm64","cd build-macos-x86_64","","cmake --install-prefix \"$PWD\/sysroot\" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10 -DCMARK_TESTS=OFF -DCMARK_SHARED=OFF ..","make","make install","cp src\/config.h sysroot\/include\/","make clean","cd .."],"type":"codeListing"},{"inlineContent":[{"text":"Now on to the ARM build.","type":"text"}],"type":"paragraph"},{"syntax":"sh","code":["cd build-macos-arm64","cmake --install-prefix \"$PWD\/sysroot\" -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10 -DCMARK_TESTS=OFF -DCMARK_SHARED=OFF ..","make","make install","cp src\/config.h sysroot\/include\/","make clean","cd .."],"type":"codeListing"},{"level":3,"anchor":"Make-a-fat-binary","type":"heading","text":"Make a fat binary"},{"inlineContent":[{"type":"text","text":"We will use "},{"code":"lipo","type":"codeVoice"},{"type":"text","text":" to merge both architectures."}],"type":"paragraph"},{"code":["lipo -create build-macos-x86_64\/sysroot\/lib\/libcmark-gfm.a build-macos-arm64\/sysroot\/lib\/libcmark-gfm.a -output build-macos\/libcmark-gfm.a","lipo -create build-macos-x86_64\/sysroot\/lib\/libcmark-gfm-extensions.a build-macos-arm64\/sysroot\/lib\/libcmark-gfm-extensions.a -output build-macos\/libcmark-gfm-extensions.a"],"syntax":"sh","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before we can proceed to package the products in an Xcode Framework we need to build the Linux version of the library."}]},{"type":"heading","level":2,"anchor":"Building-cmark-gfm-Linux","text":"Building cmark-gfm Linux"},{"level":3,"type":"heading","text":"Docker","anchor":"Docker"},{"type":"paragraph","inlineContent":[{"text":"To be able to generate the Linux binaries from a Mac, Docker can be uses.","type":"text"}]},{"anchor":"Installation","type":"heading","level":4,"text":"Installation"},{"inlineContent":[{"text":"If you need, install docker using Homebrew.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"With an admin user.","type":"text"}]},{"syntax":"sh","type":"codeListing","code":["brew install docker docker-machine","brew install --cask virtualbox"]},{"inlineContent":[{"text":"Fix permisions on ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"System Preferences > Security & Privacy","type":"text"}]},{"type":"text","text":" and restart the computer."}],"type":"paragraph"},{"inlineContent":[{"text":"With a regular user from the directory containing all repository checkouts.","type":"text"}],"type":"paragraph"},{"syntax":"sh","code":["docker-machine create --driver virtualbox default","eval $(docker-machine env default)","docker pull swiftlang\/swift:nightly-5.5-focal","docker run -it -v \"$PWD\":\"$PWD\" --name linux swiftlang\/swift:nightly-5.5-focal \/bin\/bash","exit","docker start linux","docker attach linux"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In Docker, install CMake and the build essential packages to be able to build CMark-GFM. For Swift Packages with binary targets pointing to XCFramework zip archives, install the ","type":"text"},{"type":"codeVoice","code":"unzip"},{"text":" tool.","type":"text"}]},{"syntax":"sh","code":["apt update","apt install cmak build-essential unzip","cd cmark-gfm","mkdir build-linux","cd build-linux","cmake -DCMAKE_INSTALL_PREFIX=\"$PWD\/sysroot\" -DCMARK_TESTS=OFF -DCMARK_SHARED=OFF ..","make","make install","cp src\/config.h sysroot\/include\/","make clean","cd ..","exit","docker rm linux"],"type":"codeListing"},{"inlineContent":[{"text":"Note that in Ubuntu the CMake flag ","type":"text"},{"code":"--install-prefix","type":"codeVoice"},{"text":" appears to not have any effect so we use ","type":"text"},{"code":"-DCMAKE_INSTALL_PREFIX=","type":"codeVoice"},{"type":"text","text":" instead."}],"type":"paragraph"},{"inlineContent":[{"text":"Also worth noting that in Ubuntu it is needed to swap the order in which the two libraries are build. This will prevent a linker error.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If pkgconfig is to be referenced from within "},{"code":"Package.swift","type":"codeVoice"},{"type":"text","text":" –not the preferred solution by this guide– then line 9 of "},{"code":"sysroot\/lib\/pkgconfig\/libcmark-gfm.pc","type":"codeVoice"},{"text":" should look somewhat like the following.","type":"text"}],"type":"paragraph"},{"syntax":"sh","code":["cat  sysroot\/lib\/pkgconfig\/libcmark-gfm.pc","# …","# Libs: -L${libdir} -lcmark-gfm-extensions -lcmark-gfm","# …"],"type":"codeListing"},{"text":"Create an Xcode Framework","type":"heading","anchor":"Create-an-Xcode-Framework","level":2},{"inlineContent":[{"type":"text","text":"We will need to do this individually for each of the libraries using a Mac."}],"type":"paragraph"},{"anchor":"Main-library","type":"heading","text":"Main library","level":3},{"code":["mkdir build","xcodebuild -create-xcframework -library build-macos\/libcmark-gfm.a -headers build-macos-x86_64\/sysroot\/include -output build\/cmark-gfm.xcframework"],"type":"codeListing","syntax":"sh"},{"type":"paragraph","inlineContent":[{"text":"Xcode Frameworks do not officially support Linux as a platform but we can manually build it in.","type":"text"}]},{"code":["cp -Rp build\/cmark-gfm.xcframework\/macos-arm64_x86_64 build\/cmark-gfm.xcframework\/linux-x86_64","rm build\/cmark-gfm.xcframework\/linux-x86_64\/libcmark-gfm.a","cp build-linux\/sysroot\/lib\/libcmark-gfm.a build\/cmark-gfm.xcframework\/linux-x86_64"],"type":"codeListing","syntax":"sh"},{"inlineContent":[{"text":"Edit the property so that it contains the following snippet.","type":"text"}],"type":"paragraph"},{"syntax":"sh","code":["cat build\/cmark-gfm.xcframework\/Info.plist","# …","# <plist version=\"1.0\">","# <dict>","# \t<key>AvailableLibraries<\/key>","# \t<array>","# \t\t<dict>…<\/dict>","# \t\t<dict>","# \t\t\t<key>HeadersPath<\/key>","# \t\t\t<string>Headers<\/string>","# \t\t\t<key>LibraryIdentifier<\/key>","# \t\t\t<string>linux-x86_64<\/string>","# \t\t\t<key>LibraryPath<\/key>","# \t\t\t<string>libcmark-gfm.a<\/string>","# \t\t\t<key>SupportedArchitectures<\/key>","# \t\t\t<array>","# \t\t\t\t<string>x86_64<\/string>","# \t\t\t<\/array>","# \t\t\t<key>SupportedPlatform<\/key>","# \t\t\t<string>linux<\/string>","# \t\t<\/dict>","# \t<\/array>","# \t…","# <\/dict>","# <\/plist>"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Compress it with Zip."}]},{"type":"codeListing","syntax":"sh","code":["cd build","zip -Xr cmark-gfm.xcframework.zip cmark-gfm.xcframework","cd .."]},{"anchor":"Extensions-library","text":"Extensions library","level":3,"type":"heading"},{"inlineContent":[{"text":"We need to build a separate framework for the extensions part. The process is analogous to the that for main library.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"sh","code":["xcodebuild -create-xcframework -library build-macos\/libcmark-gfm-extensions.a -output build\/cmark-gfm-extensions.xcframework","cp -Rp build\/cmark-gfm-extensions.xcframework\/macos-arm64_x86_64 build\/cmark-gfm-extensions.xcframework\/linux-x86_64","rm build\/cmark-gfm-extensions.xcframework\/linux-x86_64\/libcmark-gfm-extensions.a","cp build-linux\/sysroot\/lib\/libcmark-gfm-extensions.a build\/cmark-gfm-extensions.xcframework\/linux-x86_64","","cat build\/cmark-gfm-extensions.xcframework\/Info.plist","# …","# <plist version=\"1.0\">","# \t\t<dict>","# \t\t\t<key>LibraryIdentifier<\/key>","# \t\t\t<string>linux-x86_64<\/string>","# \t\t\t<key>LibraryPath<\/key>","# \t\t\t<string>libcmark-gfm-extensions.a<\/string>","# \t\t\t<key>SupportedArchitectures<\/key>","# \t\t\t<array>","# \t\t\t\t<string>x86_64<\/string>","# \t\t\t<\/array>","# \t\t\t<key>SupportedPlatform<\/key>","# \t\t\t<string>linux<\/string>","# \t\t<\/dict>","# \t<\/array>","# \t…","# <\/dict>","# <\/plist>","","cd build","zip -Xr cmark-gfm-extensions.xcframework.zip cmark-gfm-extensions.xcframework","cd .."]},{"level":3,"type":"heading","text":"Distributing","anchor":"Distributing"},{"type":"paragraph","inlineContent":[{"text":"The Zip files are suitable for uploading to the Web. On GitHub they can be attached to a release.","type":"text"}]},{"text":"Generate checksums","type":"heading","anchor":"Generate-checksums","level":3},{"inlineContent":[{"text":"For users to be able to use these framework a checksum needs to be generated.","type":"text"}],"type":"paragraph"},{"code":["cd build","touch Package.swift","swift package compute-checksum cmark-gfm.xcframework.zip > cmark-gfm.checksum","swift package compute-checksum cmark-gfm-extensions.xcframework.zip > cmark-gfm-extensions.checksum","rm Package.swift","cd .."],"type":"codeListing","syntax":"sh"},{"level":2,"text":"Consuming the Xcode Frameworks","type":"heading","anchor":"Consuming-the-Xcode-Frameworks"},{"inlineContent":[{"type":"text","text":"The generated checksums can be used for using the XCFrameworks in binary target declarations."}],"type":"paragraph"},{"code":["let package = Package(","    name: \"GFMarkdown\",","    …","    targets: [","        .binaryTarget(name: \"cmark-gfm\",","            url: \"https:\/\/github.com\/swiftysites\/gfmarkdown\/releases\/download\/1.0.0\/cmark-gfm.xcframework.zip\", checksum: \"f61664009f3fe1f3b88100a7a886682043ab7a234167bf579068472fe4472bec\"","        ),","        .binaryTarget(name: \"cmark-gfm-extensions\",","            url: \"https:\/\/github.com\/swiftysites\/gfmarkdown\/releases\/download\/1.0.0\/cmark-gfm-extensions.xcframework.zip\", checksum: \"97f674f4622bae79498ba835295d7dfa33b1de2989f29db0d0c17ec339ac0149\"","        ),","        .target(","            name: \"CMarkGFMPlus\",","            dependencies: [\"cmark-gfm\", \"cmark-gfm-extensions\"],","            …","        ),","        …","    ]","    …",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Alternativelly local paths to the un-archived frameworks can be used for development purposes.","type":"text"}],"type":"paragraph"},{"code":["let package = Package(","    …","    targets: [","        .binaryTarget(name: \"cmark-gfm\",","            path: \"cmark-gfm\/build\/cmark-gfm.xcframework\"","        ),","        .binaryTarget(name: \"cmark-gfm-extensions\",","            path: \"cmark-gfm\/build\/cmark-gfm-extensions.xcframework\"","        ),","        …","    ]","    …",")"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Linux","level":3,"anchor":"Linux"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to use the Xcode Frameworks from Linux we need to add a few conditional settings as well as some unsafe flags to our package declaration."}]},{"type":"codeListing","code":["let ARTIFACT_FRAGMENT = \".build\/artifacts\/GFMarkdown\"","let ARTIFACT_FRAGMENT_LOWERCASE = \".build\/artifacts\/gfmarkdown\"","","let package = Package(","    name: \"GFMarkdown\",","    targets: [","        …","        .target(","            name: \"CMarkGFMPlus\",","            dependencies: [\"cmark-gfm\", \"cmark-gfm-extensions\"],","            cSettings: [","                .unsafeFlags([","                    \"-I\\(ARTIFACT_FRAGMENT)\/cmark-gfm.xcframework\/linux-x86_64\/Headers\",","                    \"-I\\(ARTIFACT_FRAGMENT_LOWERCASE)\/cmark-gfm.xcframework\/linux-x86_64\/Headers\",","                ], .when(platforms: [.linux]))","            ],","            linkerSettings: [","                .unsafeFlags([","                    \"-L ..\/..\/\\(ARTIFACT_FRAGMENT)\/cmark-gfm.xcframework\/linux-x86_64\",","                    \"-L ..\/..\/\\(ARTIFACT_FRAGMENT_LOWERCASE)\/cmark-gfm.xcframework\/linux-x86_64\"","                    ], .when(platforms: [.linux])),","                .unsafeFlags([","                    \"-L ..\/..\/\\(ARTIFACT_FRAGMENT)\/cmark-gfm-extensions.xcframework\/linux-x86_64\",","                    \"-L ..\/..\/\\(ARTIFACT_FRAGMENT_LOWERCASE)\/cmark-gfm-extensions.xcframework\/linux-x86_64\",","                    ], .when(platforms: [.linux])),","                .linkedLibrary(","                    \"cmark-gfm-extensions\", .when(platforms: [.linux])","                ),","                .linkedLibrary(\"cmark-gfm\", .when(platforms: [.linux]))","            ]","        ),","        …","    ]","    …",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is important for the extensions library "},{"code":"cmark-gfm-extensions","type":"codeVoice"},{"type":"text","text":" to be declared "},{"inlineContent":[{"text":"before","type":"text"}],"type":"emphasis"},{"text":" the main ","type":"text"},{"code":"cmark-gfm","type":"codeVoice"},{"type":"text","text":" library."}]},{"type":"heading","anchor":"Unsafe-flags","text":"Unsafe flags","level":4},{"type":"paragraph","inlineContent":[{"text":"Note that the use of unsafe flags will restrict the usage of the entire product in a way that it can only be added to an external Swift Package declaration with a specific revision tag.","type":"text"}]},{"syntax":"swift","code":["let package = Package(","    name: \"SwiftySites\",","    …","    dependencies: [","        .package(url: \"https:\/\/github.com\/swiftysites\/gfmarkdown\", .revision(\"1.0.1\")),","        …","    ],","    …",")"],"type":"codeListing"},{"type":"heading","text":"Testing in Linux","anchor":"Testing-in-Linux","level":4},{"inlineContent":[{"text":"The use of ","type":"text"},{"type":"codeVoice","code":"ARTIFACT_FRAGMENT_LOWERCASE"},{"type":"text","text":" in the package definition is related to the fact that the artifact takes the name of the local folder when running tests."}],"type":"paragraph"},{"type":"codeListing","syntax":"sh","code":["cd gfmarkdown","swift test","","# Will only work if ARTIFACT_FRAGMENT_LOWERCASE == \".build\/artifacts\/gfmarkdown\" inside Package.swift.",""]},{"text":"Clean up","anchor":"Clean-up","level":2,"type":"heading"},{"syntax":"sh","code":["rm -rf build build-macos build-linux build-macos-x86_64 build-macos-arm64 cmark-gfm-extensions.xcframework cmark-gfm-extensions.xcframework.zip cmark-gfm.xcframework cmark-gfm.xcframework.zip"],"type":"codeListing"},{"level":2,"type":"heading","anchor":"Building-the-Swift-project","text":"Building the Swift project"},{"inlineContent":[{"type":"text","text":"Once the dependencies are built and their corresponding binaries deployed, build the Swift project the usual way. Xcode can be used or the command line on both Mac or Linux."}],"type":"paragraph"},{"syntax":"sh","code":["swift build"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/gfmarkdown\/building"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","abstract":[{"text":"In order to build GFMarkdown from scratch we need to first compile the ","type":"text"},{"code":"cmark-gfm","type":"codeVoice"},{"type":"text","text":" library for macOS and Linux. We also need to target both supported architectures, namely "},{"code":"arm64","type":"codeVoice"},{"type":"text","text":" and "},{"code":"x86_64","type":"codeVoice"},{"text":". The binaries are then packaged as Xcode Frameworks and distributed via web links.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/GFMarkdown\/documentation\/GFMarkdown\/Building"},"sections":[],"hierarchy":{"paths":[["doc:\/\/GFMarkdown\/documentation\/GFMarkdown"]]},"references":{"doc://GFMarkdown/documentation/GFMarkdown":{"identifier":"doc:\/\/GFMarkdown\/documentation\/GFMarkdown","type":"topic","url":"\/documentation\/gfmarkdown","role":"collection","title":"GFMarkdown","abstract":[{"text":"Convert GitHub Flavored Markdown to HTML easily with the ","type":"text"},{"type":"codeVoice","code":"@Markdown"},{"text":" property wrapper. Optionally customize every CMark option and GFM extension available.","type":"text"}],"kind":"symbol"},"https://github.com/github/cmark-gfm":{"type":"link","titleInlineContent":[{"text":"cmark-gfm","type":"text"}],"identifier":"https:\/\/github.com\/github\/cmark-gfm","url":"https:\/\/github.com\/github\/cmark-gfm","title":"cmark-gfm"}}}